#!/usr/bin/perl -w
#
# last updated : 2012/08/23 12:48:14 JST
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
#

#%# family=snmpauto
#%# capabilities=snmpconf

use strict;
use warnings;
use Net::SNMP;

my $DEBUG = 0;
my $MAXLABEL = 20;

my $host      = $ENV{host}      || '192.168.1.1';
my $port      = $ENV{port}      || 161;
my $community = $ENV{community} || "ix2015";
my $iface     = $ENV{interface} || undef;
my $version   = $ENV{version}   || 1;

my $response;

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
	print "require 1.3.6.1.4.1.119.2.3.84.2.1 [0-9]\n"; # Number
	exit 0;
}

if ($0 =~ /^(?:|.*\/)snmp_([^_]+)_temp$/)
{
	$host  = $1;
	if ($host =~ /^([^:]+):(\d+)$/)
	{
		$host = $1;
		$port = $2;
	}
}
elsif (!defined($host))
{
	print "# Debug: $0 -- $1\n" if $DEBUG;
	die "# Error: couldn't understand what I'm supposed to monitor.";
}

my ($session, $error);

if (defined($version))
{
        ($session, $error) = Net::SNMP->session(
                        -hostname  => $host,
                        -community => $community,
                        -port      => $port,
                        -version   => $version
                );
}
else
{
        ($session, $error) = Net::SNMP->session(
                        -hostname  => $host,
                        -community => $community,
                        -port      => $port
                );
}

if (!defined ($session))
{
	die "Croaking: $error";
}

if (defined $ARGV[0] and $ARGV[0] eq "config")
{
	print "host_name $host\n";
	print "graph_title Temperatures\n";
	print "graph_args --base 1000 --lower-limit 30\n";
	print "graph_vlabel Celcius\n";
	print "graph_category sensors\n";
	print "graph_info This graph shows temperatures in the system.\n";
	print "temp.label temp\n";
#	print "temp.infoTemperature readout from ix2015 \n";
	print "temp.draw LINE2\n";
	exit 0;
}

print "temp.value ", &get_single ($session, '1.3.6.1.4.1.119.2.3.84.2.1.1.0'), "\n";

# my $res;
# my $id = '1.3.6.1.4.1.119.2.3.84.2.1.1.0';
# $res = $session->get_request(-varbindlist => [$id]);
# print "temp.value ", $res->{$id} , "\n";


sub get_single
{
	my $handle = shift;
	my $oid    = shift;

	print "# Getting single $oid...\n" if $DEBUG;

#	$response = $handle->get_request ($oid);
 	$response = $handle->get_request(-varbindlist => [$oid]);

	if (!defined $response->{$oid})
	{
	    return undef;
	}
	else
	{
	    return $response->{$oid};
	}
}

